{"ast":null,"code":"var _jsxFileName = \"/Users/prov/Documents/Front-end_Projects/amazon-clone/src/StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport reducer, { initialState } from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext();\nexport const StateProvider = ({\n  reducer,\n  initialState,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/prov/Documents/Front-end_Projects/amazon-clone/src/StateProvider.js"],"names":["React","createContext","useContext","useReducer","reducer","initialState","StateContext","StateProvider","children","useStateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,OAAOC,OAAP,IAAkBC,YAAlB,QAAsC,WAAtC;;AAEA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,EAAlC;AAEP,OAAO,MAAMM,aAAa,GAAG,CAAC;AAAEH,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBG,EAAAA;AAAzB,CAAD;AAAA;;AAAA,sBAC3B,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACC,OAAD,EAAUC,YAAV,CAAxC;AAAA,cACGG;AADH;AAAA;AAAA;AAAA;AAAA,UAD2B;AAAA,CAAtB;;GAAMD,a;;KAAAA,a;AAMb,OAAO,MAAME,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACI,YAAD,CAAhB;AAAA,CAAtB;;IAAMG,a","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport reducer, { initialState } from \"./reducer\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n"]},"metadata":{},"sourceType":"module"}